<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="../css/api.css">
    <link rel="stylesheet" href="../css/message.css">
    <title>Document</title>
</head>
<body>
    <div class="chatbody" id="body">
    </div>
</body>
<script type="text/javascript" src="../script/jquery-3.2.1.min.js"></script>
<script type="text/javascript" src="../script/api.js"></script>
<script type="text/javascript" src="../script/flexible.js"></script>
<script type="text/javascript" src="../script/base.js"></script>
<script type="text/javascript" src="../script/common.js"></script>
<script>
    function cres(text){
        var htmls = Xiaobang.create_Send(text);
        $('#body').append(htmls);
        //滚动到底部document.getElementById('body').scrollTop = document.getElementById('body').scrollHeight;
    }
    var rongCloud2,latestMessageId,hasChild,firstDomo;
    apiready=function functionName() {
        rongCloud2 = api.require("rongCloud2");
        rongCloud2.init(function(ret, err) {
            if (ret.status == 'error')
                api.toast({ msg: err.code });
        });
        rongCloud2.connect({
            token: 'A4DcNTRt7m5EKz2J2BMn1R59sKTMkq/Tx7Vr3Zk1v2k7tiEBTPwJi30TLib+LdymzF99RndYa2OhuGIgEtI3cg=='},function(ret, err) {
            if (ret.status == 'success') {
                //返回登录者ID；api.toast({ msg: ret.result.userId });
            }
        });
        //添加接收到消息的回调
        api.addEventListener({
            name: 'getmessage'
        }, function(ret, err){
            if( ret ){
                 var htmls = Xiaobang.create_Receive(ret.value.message);
                 $('#body').append(htmls);
                 latestMessageId = ret.value.message.messageId;
                 rongCloud2.setMessageReceivedStatus({
                     messageId: ret.value.message.messageId,
                     receivedStatus: 'READ'
                 }, function(ret, err) {
                     //设置成已读后，从新获取未读消息函数，获取新的未读消息；
                     if(ret.status=='success')
                     {
                         api.execScript({
                             name: 'root',
                             script: 'getUnreadCount();'
                         });
                         api.execScript({
                             name: 'root',
                             frameName: 'message',
                             script: 'initmessageList();'
                         });
                     }
                 })
            }
        });

        //获取该会话的所有未读数；
        rongCloud2.getUnreadCount({
            conversationType: 'PRIVATE',
            targetId: api.pageParam.duifangid
        }, function(ret, err) {
            //ret.result;未读消息数，number型；
            //alert( ret.result );
            //获取所有未读消息
            rongCloud2.getLatestMessages({
                conversationType: 'PRIVATE',
                targetId:api.pageParam.duifangid,
                count: ret.result
            }, function(ret, err) {
                //alert(JSON.stringify(ret.result));
                // 因为是按时间倒叙排序的，所有这里需要反转数组；
                var messagedata =(ret.result).reverse();
                latestMessageId = messagedata[0].messageId;
                for (var i = 0; i < messagedata.length; i++) {
                    var messageone = messagedata[i];
                    if(messageone.messageDirection=='RECEIVE')
                    {
                        //接收
                        var htmls = Xiaobang.create_Receive(messageone);
                        $('#body').append(htmls);
                        //将所有未读消息设置成已读状态
                        rongCloud2.setMessageReceivedStatus({
                            messageId: messageone.messageId,
                            receivedStatus: 'READ'
                        }, function(ret, err) {
                            //api.toast({ msg: ret.status });
                            //设置成已读后，从新获取未读消息函数，获取新的未读消息；
                            if(ret.status=='success')
                            {
                                api.execScript({
                                    name: 'root',
                                    script: 'getUnreadCount();'
                                });
                                api.execScript({
                                    name: 'root',
                                    frameName: 'message',
                                    script: 'initmessageList();'
                                });
                            }
                        });
                    }else {
                        //发送
                        // var htmls = Xiaobang.create_Send(text);
                        // $('#body').append(htmls);
                    }
                }
            })
        })
        // 下拉获取历史消息,暂时不做，有问题
        api.setRefreshHeaderInfo({
            visible: true,
            loadingImg: 'widget://image/refresh.png',
            bgColor: '#ccc',
            textColor: '#fff',
            textDown: '下拉刷新...',
            textUp: '松开刷新...',
            showTime: true
        }, function(ret, err){
            if($('#body').find('.receive').length!=0||$('#body').find('.send').length!=0){
                hasChild=true;
                firstDomo = ($('#body').children())[0];
            }else {
                hasChild=false;
            }
            rongCloud2.getHistoryMessages({
                conversationType: 'PRIVATE',
                targetId: api.pageParam.duifangid,
                oldestMessageId:latestMessageId||-1,
                count: 20
            }, function(ret, err) {
                alert(JSON.stringify(ret.result));
                //填充HTML； 因为是按时间倒叙排序的，所有这里需要反转数组；
                if(ret.result.length!=0)
                {
                    var messagedata =(ret.result).reverse();
                    for (var i = 0; i < messagedata.length; i++) {
                        var messageone = messagedata[i];
                        latestMessageId = messagedata[0].messageId;
                        if(messageone.messageDirection=='RECEIVE')
                        {
                            //接收
                            var htmls = Xiaobang.create_Receive(messageone);
                            if(hasChild)
                            {
                                $(firstDomo).before(htmls);
                            }else{
                                $('#body').append(htmls);
                            }
                        }else {
                            //发送
                            var htmls = Xiaobang.create_Send(messageone);
                            if(hasChild)
                            {
                                $(firstDomo).before(htmls);
                            }else{
                                $('#body').append(htmls);
                            }
                        }
                    }
                    setTimeout(function(){api.refreshHeaderLoadDone();},500);
                }else {
                    api.toast({ msg:'没有历史消息了！' });
                    setTimeout(function(){api.refreshHeaderLoadDone();},500);
                }
            });
        });
        //触发修改title的名称
        api.execScript({
            name: 'messageIframe',
            script: 'changename()'
        });

    }


    // 之后调用 connect 的代码省略
</script>
</html>
